<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="BackgroundBrush" Color="{DynamicResource BackgroundColor}"/>
    <SolidColorBrush x:Key="ForegroundBrush" Color="{DynamicResource ForegroundColor}"/>
    <SolidColorBrush x:Key="BackgroundButtonBrush" Color="{DynamicResource BackgroundButtonColor}"/>
    <SolidColorBrush x:Key="BackgroundButtonMouseOverBrush" Color="{DynamicResource BackgroundButtonMouseOverColor}"/>
    <SolidColorBrush x:Key="BackgroundButtonMouseClickBrush" Color="{DynamicResource BackgroundButtonMouseClickColor}"/>
    <ImageBrush x:Key="ConfigurationIconBrush" ImageSource="{DynamicResource ConfigurationIcon}"/>
    <!--#region Window-->
    <Style TargetType="Window" x:Key="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
    </Style>
    <!--#endregion-->
    <!--#region UserControl-->
    <Style TargetType="UserControl" x:Key="{x:Type UserControl}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
    </Style>
    <!--#endregion-->
    <!--#region TextBlock-->
    <Style TargetType="TextBlock" x:Key="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="DropMessage" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="20"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="WrapTextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="TextAlignment" Value="Justify"/>
        <Setter Property="MaxWidth">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource WidthMarginConverter}">
                    <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="ActualWidth"/>
                    <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Margin"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#region TextBox-->
    <Style TargetType="TextBox" x:Key="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="TextBox" x:Key="WrapTextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="TextAlignment" Value="Justify"/>
        <Setter Property="MaxWidth">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource WidthMarginConverter}">
                    <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="ActualWidth"/>
                    <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Margin"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#region Button-->
    <Style TargetType="Button" x:Key="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Background="{DynamicResource BackgroundButtonBrush}"
                            Padding="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundButtonMouseOverBrush}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundButtonMouseClickBrush}" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="ImageButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Background="{DynamicResource BackgroundBrush}"
                            Padding="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundButtonMouseOverBrush}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundButtonMouseClickBrush}" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#region ListView-->
    <Style TargetType="ListView" x:Key="{x:Type ListView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <!--#endregion-->
    <!--region StackPanel-->
    <Style TargetType="StackPanel" x:Key="{x:Type StackPanel}">
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <!--#endregion-->
    <!--region DockPanel-->
    <Style TargetType="DockPanel" x:Key="{x:Type DockPanel}">
        <Setter Property="LastChildFill" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>
    <!--#endregion-->
</ResourceDictionary>